#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '../soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x1000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x1007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1553312965

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x3000
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x300f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 10
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x4000
#define DIPSW_PIO_SPAN 16
#define DIPSW_PIO_END 0x400f
#define DIPSW_PIO_IRQ 0
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 1
#define DIPSW_PIO_DATA_WIDTH 10
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE ANY
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 1
#define DIPSW_PIO_HAS_OUT 0
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE EDGE
#define DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x5000
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x500f
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 4
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioPhaCountLSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOPHACOUNTLSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_COMPONENT_NAME FrequencyMeter_0_pioPhaCountLSB
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_BASE 0x6000
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_SPAN 16
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_END 0x600f
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOPHACOUNTLSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioPhaCountMSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOPHACOUNTMSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_COMPONENT_NAME FrequencyMeter_0_pioPhaCountMSB
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_BASE 0x7000
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_SPAN 16
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_END 0x700f
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOPHACOUNTMSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioRefCountLSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOREFCOUNTLSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_COMPONENT_NAME FrequencyMeter_0_pioRefCountLSB
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_BASE 0x8000
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_SPAN 16
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_END 0x800f
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOREFCOUNTLSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioRefCountMSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOREFCOUNTMSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_COMPONENT_NAME FrequencyMeter_0_pioRefCountMSB
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_BASE 0x9000
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_SPAN 16
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_END 0x900f
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOREFCOUNTMSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioSigCountLSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOSIGCOUNTLSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_COMPONENT_NAME FrequencyMeter_0_pioSigCountLSB
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_BASE 0xa000
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_SPAN 16
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_END 0xa00f
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOSIGCOUNTLSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_pioSigCountMSB', class 'altera_avalon_pio'
 * The macros are prefixed with 'FREQUENCYMETER_0_PIOSIGCOUNTMSB_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_COMPONENT_TYPE altera_avalon_pio
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_COMPONENT_NAME FrequencyMeter_0_pioSigCountMSB
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_BASE 0xb000
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_SPAN 16
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_END 0xb00f
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_BIT_CLEARING_EDGE_REGISTER 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_CAPTURE 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_DATA_WIDTH 32
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_DO_TEST_BENCH_WIRING 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_DRIVEN_SIM_VALUE 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_EDGE_TYPE NONE
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_FREQ 50000000
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_HAS_IN 1
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_HAS_OUT 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_HAS_TRI 0
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_IRQ_TYPE NONE
#define FREQUENCYMETER_0_PIOSIGCOUNTMSB_RESET_VALUE 0

/*
 * Macros for device 'FrequencyMeter_0_sysid_qsys_0', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'FREQUENCYMETER_0_SYSID_QSYS_0_'.
 * The prefix is the slave descriptor.
 */
#define FREQUENCYMETER_0_SYSID_QSYS_0_COMPONENT_TYPE altera_avalon_sysid_qsys
#define FREQUENCYMETER_0_SYSID_QSYS_0_COMPONENT_NAME FrequencyMeter_0_sysid_qsys_0
#define FREQUENCYMETER_0_SYSID_QSYS_0_BASE 0xc000
#define FREQUENCYMETER_0_SYSID_QSYS_0_SPAN 8
#define FREQUENCYMETER_0_SYSID_QSYS_0_END 0xc007
#define FREQUENCYMETER_0_SYSID_QSYS_0_ID 371397237
#define FREQUENCYMETER_0_SYSID_QSYS_0_TIMESTAMP 1553312965

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x20007
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * The macros are prefixed with 'ILC_'.
 * The prefix is the slave descriptor.
 */
#define ILC_COMPONENT_TYPE interrupt_latency_counter
#define ILC_COMPONENT_NAME ILC
#define ILC_BASE 0x30000
#define ILC_SPAN 256
#define ILC_END 0x300ff


#endif /* _ALTERA_HPS_0_H_ */
